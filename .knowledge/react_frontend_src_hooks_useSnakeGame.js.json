{"is_source_file": true, "format": "JavaScript", "description": "A custom React hook for managing the state and logic of a Snake game, including snake movement, food generation, scoring, and game control functions.", "external_files": [], "external_methods": [], "published": ["useSnakeGame"], "classes": [], "methods": [{"name": "generateFood", "description": "Generates a new food position on the board that does not overlap with the snake."}, {"name": "startGame", "description": "Starts the game or resets it if already over."}, {"name": "pauseGame", "description": "Pauses the game."}, {"name": "resetGame", "description": "Resets the game state to its initial values."}], "calls": ["useState", "useEffect", "useCallback"], "search-terms": ["Snake game", "useSnakeGame", "game state management", "React hook"], "state": 2, "file_id": 15, "knowledge_revision": 32, "git_revision": "", "ctags": [{"_type": "tag", "name": "DIRECTIONS", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^const DIRECTIONS = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "DOWN", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  DOWN: [0, 1],$/", "language": "JavaScript", "kind": "property", "scope": "DIRECTIONS", "scopeKind": "class"}, {"_type": "tag", "name": "GAME_SPEED", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^const GAME_SPEED = 150;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "INITIAL_DIRECTION", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^const INITIAL_DIRECTION = DIRECTIONS.RIGHT;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "INITIAL_SNAKE", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^const INITIAL_SNAKE = [[5, 5]];$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "LEFT", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  LEFT: [-1, 0],$/", "language": "JavaScript", "kind": "property", "scope": "DIRECTIONS", "scopeKind": "class"}, {"_type": "tag", "name": "RIGHT", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  RIGHT: [1, 0]$/", "language": "JavaScript", "kind": "property", "scope": "DIRECTIONS", "scopeKind": "class"}, {"_type": "tag", "name": "UP", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  UP: [0, -1],$/", "language": "JavaScript", "kind": "property", "scope": "DIRECTIONS", "scopeKind": "class"}, {"_type": "tag", "name": "generateFood", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const generateFood = useCallback(() => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "pauseGame", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const pauseGame = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "resetGame", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const resetGame = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setDirection", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const [direction, setDirection] = useState(INITIAL_DIRECTION);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setFood", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const [food, setFood] = useState(null);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setGameOver", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const [gameOver, setGameOver] = useState(false);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setIsPlaying", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const [isPlaying, setIsPlaying] = useState(false);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setScore", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const [score, setScore] = useState(0);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setSnake", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const [snake, setSnake] = useState(INITIAL_SNAKE);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "startGame", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^  const startGame = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "useSnakeGame", "path": "/tmp/kavia/workspace/code-generation/classic-snake-game-46a6d05e/react_frontend/src/hooks/useSnakeGame.js", "pattern": "/^export const useSnakeGame = (boardSize = 20) => {$/", "language": "JavaScript", "kind": "constant"}], "hash": "da102da7d228c4407f1841b030cf9a28", "format-version": 4, "code-base-name": "react_frontend", "filename": "react_frontend/src/hooks/useSnakeGame.js", "fields": [{"name": "DOWN: [0, 1],", "scope": "DIRECTIONS", "scopeKind": "class", "description": "unavailable"}, {"name": "LEFT: [-1, 0],", "scope": "DIRECTIONS", "scopeKind": "class", "description": "unavailable"}, {"name": "RIGHT: [1, 0]", "scope": "DIRECTIONS", "scopeKind": "class", "description": "unavailable"}, {"name": "UP: [0, -1],", "scope": "DIRECTIONS", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"32": ""}]}